name: ci

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

env:
  NODE_VERSION: '12'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test
      run: yarn lint:js
  test:
    name: Run Tests
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: Tests
      run: yarn test:ember

  deploy:
    name: Deploy demo app
    runs-on: ubuntu-20.04
    needs: [lint, test]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: Ember Build
      run: ./node_modules/ember-cli/bin/ember build --silent --environment=production
    - name: Deploy website
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist/

  release:
    name: Release Package
    runs-on: ubuntu-20.04
    needs: [lint, test]
    if: contains(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Publish
      run: |
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/.npmrc
        npm publish --access public
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
